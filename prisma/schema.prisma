generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model arte {
  idar                       Int       @id @default(autoincrement())
  idu                        Int?
  idot                       Int?
  fechar                     DateTime? @db.Timestamp(6)
  fechaa                     DateTime? @db.Timestamp(6)
  idua                       Int?
  estado                     String?   @db.VarChar(200)
  obs                        String?   @db.VarChar(500)
  precio                     Float?
  ordent                     ordent?   @relation(fields: [idot], references: [idot], onDelete: NoAction, onUpdate: NoAction)
  usuario_arte_iduTousuario  usuario?  @relation("arte_iduTousuario", fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
  usuario_arte_iduaTousuario usuario?  @relation("arte_iduaTousuario", fields: [idua], references: [idu], onDelete: NoAction, onUpdate: NoAction)
}

model cliente {
  idcli      Int          @id @default(autoincrement())
  idpe       Int
  estado     Boolean?     @default(true)
  persona    persona      @relation(fields: [idpe], references: [idpe], onDelete: NoAction, onUpdate: NoAction)
  cotizacion cotizacion[]
  ordent     ordent[]
}

model color {
  idcolor Int      @id @default(autoincrement())
  nom     String?  @db.VarChar(200)
  punit   Float?
  idmar   Int?
  estado  Boolean? @default(true)
  des     String?  @db.VarChar
  marca   marca?   @relation(fields: [idmar], references: [idmar], onDelete: NoAction, onUpdate: NoAction)
}

model configuracionlaboral {
  idconf           Int       @id @default(autoincrement())
  entrada          DateTime? @db.Time(6)
  salida           DateTime? @db.Time(6)
  tipo             String?   @db.VarChar
  retrasopermitido String?   @db.VarChar
  adicional        DateTime? @db.Timetz(6)
  adicional1       DateTime? @db.Timetz(6)
}

model cotizacion {
  idcot       Int       @id @default(autoincrement())
  idu         Int?
  idcli       Int?
  fecha       DateTime? @db.Timestamp(6)
  precio      Float?
  descuento   Float?
  preciofinal Float?
  tiempo      Int?
  arte        String?   @db.VarChar(200)
  obs         String?   @db.VarChar(500)
  estado      String?   @db.VarChar(200)
  cliente     cliente?  @relation(fields: [idcli], references: [idcli], onDelete: NoAction, onUpdate: NoAction)
  usuario     usuario?  @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
  detcot      detcot[]
  ordent      ordent[]
}

model datos {
  idu         Int
  login       String  @id @db.VarChar(10)
  contrasenia String  @db.VarChar(10)
  usuario     usuario @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
}

model detcot {
  iddetcot   Int         @id @default(autoincrement())
  idcot      Int?
  idpro      Int?
  cant       Int?
  punit      Float?
  stotal     Float?
  material   String?     @db.VarChar(200)
  gr         String?     @db.VarChar(200)
  tintas     String?     @db.VarChar
  estado     Boolean?    @default(true)
  cotizacion cotizacion? @relation(fields: [idcot], references: [idcot], onDelete: NoAction, onUpdate: NoAction)
  producto   producto?   @relation(fields: [idpro], references: [idpro], onDelete: NoAction, onUpdate: NoAction)
}

model detot {
  iddetot  Int       @id @default(autoincrement())
  idot     Int?
  idpro    Int?
  cant     Int?
  punit    Float?
  stotal   Float?
  material String?   @db.VarChar(200)
  gr       String?   @db.VarChar(200)
  tintas   String?   @db.VarChar
  estado   Boolean?  @default(true)
  ordent   ordent?   @relation(fields: [idot], references: [idot], onDelete: NoAction, onUpdate: NoAction)
  producto producto? @relation(fields: [idpro], references: [idpro], onDelete: NoAction, onUpdate: NoAction)
}

model empresa {
  idem    Int       @id @default(autoincrement())
  nom     String?   @db.VarChar(40)
  dir     String?   @db.VarChar(200)
  des     String?   @db.VarChar(200)
  dep     String?   @db.VarChar(100)
  logo    Bytes?
  idpe    Int?
  nit     String?   @db.VarChar
  auto    String?   @db.VarChar
  base64  String?   @db.VarChar
  persona persona?  @relation(fields: [idpe], references: [idpe], onDelete: NoAction, onUpdate: NoAction)
  leyenda leyenda[]
  usuario usuario[]
}

model eventos {
  idev        Int       @id @default(autoincrement())
  fechainicio DateTime? @db.Date
  fechafin    DateTime? @db.Date
  tipo        String?   @db.VarChar
  evento      String?   @db.VarChar
  adicional   String?   @db.VarChar
  adicional1  String?   @db.VarChar
  estado      String?   @db.VarChar
}

model factura {
  idfac   Int       @id @default(autoincrement())
  idot    Int?
  idu     Int?
  monto   Float?
  fecha   DateTime? @db.Timestamp(6)
  aux     String?   @db.VarChar
  aux1    String?   @db.VarChar
  ordent  ordent?   @relation(fields: [idot], references: [idot], onDelete: NoAction, onUpdate: NoAction)
  usuario usuario?  @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
}

model inventario {
  idin      Int        @id @default(autoincrement())
  idprov    Int?
  codigo    String?    @db.VarChar
  nom       String?    @db.VarChar
  precio    Float?
  gr        Float?
  tam       String?    @db.VarChar
  des       String?    @db.VarChar
  cant      Int?
  estado    Boolean?   @default(true)
  proveedor proveedor? @relation(fields: [idprov], references: [idprov], onDelete: NoAction, onUpdate: NoAction)
}

model leyenda {
  idle    Int      @id @default(autoincrement())
  des     String?  @db.VarChar(200)
  orden   Int?
  idem    Int?
  empresa empresa? @relation(fields: [idem], references: [idem], onDelete: NoAction, onUpdate: NoAction)
}

model marca {
  idmar     Int         @id @default(autoincrement())
  nom       String?     @db.VarChar(200)
  des       String?     @db.VarChar(200)
  estado    Boolean?    @default(true)
  color     color[]
  producto  producto[]
  terminado terminado[]
}

model menu {
  idm     Int       @id @default(autoincrement())
  nom     String    @db.VarChar(40)
  url     String    @db.VarChar(200)
  estado  Boolean?  @default(true)
  rolmenu rolmenu[]
}

model ordent {
  idot        Int         @id @default(autoincrement())
  idu         Int?
  idcli       Int?
  idcot       Int?
  fecha       DateTime?   @db.Timestamp(6)
  precio      Float?
  descuento   Float?
  preciofinal Float?
  tiempo      Int?
  arte        String?     @db.VarChar(200)
  obs         String?     @db.VarChar(500)
  estado      String?     @db.VarChar(200)
  factura     String?     @db.VarChar
  arte1       arte[]
  detot       detot[]
  factura1    factura[]
  cliente     cliente?    @relation(fields: [idcli], references: [idcli], onDelete: NoAction, onUpdate: NoAction)
  cotizacion  cotizacion? @relation(fields: [idcot], references: [idcot], onDelete: NoAction, onUpdate: NoAction)
  usuario     usuario?    @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
  pago        pago[]
}

model pago {
  idpagp      Int       @id @default(autoincrement())
  idot        Int?
  fecha       DateTime? @db.Timestamp(6)
  preciof     Float?
  pago        Float?
  saldo       Float?
  des         String?   @db.VarChar(500)
  comprobante Bytes?
  ordent      ordent?   @relation(fields: [idot], references: [idot], onDelete: NoAction, onUpdate: NoAction)
}

model persona {
  idpe      Int         @id @default(autoincrement())
  ci        String      @db.VarChar(20)
  nombre    String      @db.VarChar(60)
  ap        String      @db.VarChar(40)
  am        String?     @db.VarChar(40)
  direccion String?     @db.VarChar(200)
  email     String?     @db.VarChar(100)
  estado    Boolean?    @default(true)
  base64    String?     @db.VarChar
  cliente   cliente[]
  empresa   empresa[]
  proveedor proveedor[]
  telefono  telefono[]
  usuario   usuario[]
}

model producto {
  idpro    Int      @id @default(autoincrement())
  nom      String?  @db.VarChar(200)
  tam      String?  @db.VarChar(200)
  des      String?  @db.VarChar(200)
  preciov  Float?
  precioc  Float?
  cantidad Int?
  foto     Bytes?
  idmar    Int?
  estado   Boolean? @default(true)
  base64   String?  @db.VarChar
  ranking  Int?
  detcot   detcot[]
  detot    detot[]
  marca    marca?   @relation(fields: [idmar], references: [idmar], onDelete: NoAction, onUpdate: NoAction)
}

model proveedor {
  idprov     Int          @id @default(autoincrement())
  nom        String?      @db.VarChar
  dir        String?      @db.VarChar
  dep        String?      @db.VarChar
  logo       Bytes?
  idpe       Int?
  estado     Boolean?     @default(true)
  nit        String?      @db.VarChar
  inventario inventario[]
  persona    persona?     @relation(fields: [idpe], references: [idpe], onDelete: NoAction, onUpdate: NoAction)
}

model registrolaboral {
  idre         Int       @id @default(autoincrement())
  idu          Int?
  tiporegistro String?   @db.VarChar
  fecha        DateTime? @db.Date
  hora         DateTime? @db.Time(6)
  mes          String?   @db.VarChar
  estado       String?   @db.VarChar
  adicional    String?   @db.VarChar
  adicional2   String?   @db.VarChar
  atraso       DateTime? @db.Time(6)
  usuario      usuario?  @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  idr       Int       @id @default(autoincrement())
  nombre    String    @db.VarChar(40)
  descrip   String    @db.VarChar(100)
  jerarquia Int
  estado    Boolean   @default(true)
  rolmenu   rolmenu[]
  usurol    usurol[]
}

model rolmenu {
  idr   Int
  idm   Int
  menu  menu  @relation(fields: [idm], references: [idm], onDelete: NoAction, onUpdate: NoAction)
  roles roles @relation(fields: [idr], references: [idr], onDelete: NoAction, onUpdate: NoAction)

  @@id([idr, idm])
}

model telefono {
  idtel   Int      @id @default(autoincrement())
  idpe    Int
  numero  String   @db.VarChar(20)
  estado  Boolean? @default(true)
  persona persona  @relation(fields: [idpe], references: [idpe], onDelete: NoAction, onUpdate: NoAction)
}

model terminado {
  idter  Int      @id @default(autoincrement())
  nom    String?  @db.VarChar(200)
  punit  Float?
  idmar  Int?
  estado Boolean? @default(true)
  marca  marca?   @relation(fields: [idmar], references: [idmar], onDelete: NoAction, onUpdate: NoAction)
}

model usuario {
  idu                     Int               @id @default(autoincrement())
  sexo                    String            @db.Char(1)
  foto                    Bytes?
  fecnac                  DateTime          @db.Date
  idpe                    Int
  estado                  Boolean?          @default(true)
  idem                    Int?
  base64                  String?           @db.VarChar
  arte_arte_iduTousuario  arte[]            @relation("arte_iduTousuario")
  arte_arte_iduaTousuario arte[]            @relation("arte_iduaTousuario")
  cotizacion              cotizacion[]
  datos                   datos[]
  factura                 factura[]
  ordent                  ordent[]
  registrolaboral         registrolaboral[]
  empresa                 empresa?          @relation(fields: [idem], references: [idem], onDelete: NoAction, onUpdate: NoAction)
  persona                 persona           @relation(fields: [idpe], references: [idpe], onDelete: NoAction, onUpdate: NoAction)
  usurol                  usurol[]
}

model usurol {
  idr     Int
  idu     Int
  roles   roles   @relation(fields: [idr], references: [idr], onDelete: NoAction, onUpdate: NoAction)
  usuario usuario @relation(fields: [idu], references: [idu], onDelete: NoAction, onUpdate: NoAction)

  @@id([idr, idu])
}
